<?php

namespace OCA\Chat\OCH\Commands;

use \OCA\Chat\OCH\ChatAPI;
use \OCA\Chat\Core\API;
use \OCA\Chat\OCH\Db\UserOnlineMapper;
use \OCA\Chat\OCH\Commands\SyncOnline;

<<<<<<< HEAD:lib/och/commands/offline.php
class Offline extends ChatAPI {
	
    public function __construct(API $api){
        parent::__construct($api);
    }
=======
class CheckOnline extends ChatAPI {
>>>>>>> add_unit_tests:lib/och/commands/checkonline.php


    public function setRequestData(array $requestData){
        $this->requestData = $requestData;
    }

    public function execute(){	
<<<<<<< HEAD:lib/och/commands/offline.php
        $mapper = new UserOnlineMapper($this->api);
        $mapper->deleteBySessionId($this->requestData['session_id']);   		
	
	$syncOnline = new SyncOnline($this->api);
        $syncOnline->execute();
        
	return;
=======
        $mapper = $this->app['UserOnlineMapper'];
        $users = $mapper->getAll();
        foreach($users as $user){
            if((time() - $user->getLastOnline()) > 60){
                $mapper->deleteBySessionId($user->getSessionId());	
            }
        }
>>>>>>> add_unit_tests:lib/och/commands/checkonline.php
    }	
}
